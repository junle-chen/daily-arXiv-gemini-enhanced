{"id": "2510.24307", "pdf": "https://arxiv.org/pdf/2510.24307", "abs": "https://arxiv.org/abs/2510.24307", "authors": ["Shyam Jesalpura", "Shengda Zhu", "Amir Shaikhha", "Antonio Barbalace", "Boris Grot"], "title": "Odyssey: An End-to-End System for Pareto-Optimal Serverless Query Processing", "categories": ["cs.DB", "cs.DC"], "comment": null, "summary": "Running data analytics queries on serverless (FaaS) workers has been shown to\nbe cost- and performance-efficient for a variety of real-world scenarios,\nincluding intermittent query arrival patterns, sudden load spikes and\nmanagement challenges that afflict managed VM clusters. Alas, existing\nserverless data analytics works focus primarily on the serverless execution\nengine and assume the existence of a \"good\" query execution plan or rely on\nuser guidance to construct such a plan. Meanwhile, even simple analytics\nqueries on serverless have a huge space of possible plans, with vast\ndifferences in both performance and cost among plans.\n  This paper introduces Odyssey, an end-to-end serverless-native data analytics\npipeline that integrates a query planner, cost model and execution engine.\nOdyssey automatically generates and evaluates serverless query plans, utilizing\nstate space pruning heuristics and a novel search algorithm to identify\nPareto-optimal plans that balance cost and performance with low latency even\nfor complex queries. Our evaluations demonstrate that Odyssey accurately\npredicts both monetary cost and latency, and consistently outperforms AWS\nAthena on cost and/or latency."}
{"id": "2510.24599", "pdf": "https://arxiv.org/pdf/2510.24599", "abs": "https://arxiv.org/abs/2510.24599", "authors": ["Harsha Kokel", "Aamod Khatiwada", "Tejaswini Pedapati", "Haritha Ananthakrishnan", "Oktie Hassanzadeh", "Horst Samulowitz", "Kavitha Srinivas"], "title": "Evaluating Joinable Column Discovery Approaches for Context-Aware Search", "categories": ["cs.DB"], "comment": "This is an Experiments and Analysis paper. The source code, data,\n  and/or other artifacts have been made available at\n  https://github.com/IBM/ContextAwareJoin", "summary": "Joinable Column Discovery is a critical challenge in automating enterprise\ndata analysis. While existing approaches focus on syntactic overlap and\nsemantic similarity, there remains limited understanding of which methods\nperform best for different data characteristics and how multiple criteria\ninfluence discovery effectiveness. We present a comprehensive experimental\nevaluation of joinable column discovery methods across diverse scenarios. Our\nstudy compares syntactic and semantic techniques on seven benchmarks covering\nrelational databases and data lakes. We analyze six key criteria -- unique\nvalues, intersection size, join size, reverse join size, value semantics, and\nmetadata semantics -- and examine how combining them through ensemble ranking\naffects performance. Our analysis reveals differences in method behavior across\ndata contexts and highlights the benefits of integrating multiple criteria for\nrobust join discovery. We provide empirical evidence on when each criterion\nmatters, compare pre-trained embedding models for semantic joins, and offer\npractical guidelines for selecting suitable methods based on dataset\ncharacteristics. Our findings show that metadata and value semantics are\ncrucial for data lakes, size-based criteria play a stronger role in relational\ndatabases, and ensemble approaches consistently outperform single-criterion\nmethods."}
