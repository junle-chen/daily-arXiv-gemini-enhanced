{"id": "2509.13524", "pdf": "https://arxiv.org/pdf/2509.13524", "abs": "https://arxiv.org/abs/2509.13524", "authors": ["Ginger Tsueng", "Emily Bullen", "Candice Czech", "Dylan Welzel", "Leandro Collares", "Jason Lin", "Everaldo Rodolpho", "Zubair Qazi", "Nichollette Acosta", "Lisa M. Mayer", "Sudha Venkatachari", "Zorana Mitrovi\u0107 Vu\u010di\u010devi\u0107", "Poromendro N. Burman", "Deepti Jain", "Jack DiGiovanna", "Maria Giovanni", "Asiyah Lin", "Wilbert Van Panhuis", "Laura D. Hughes", "Andrew I. Su", "Chunlei Wu"], "title": "The NIAID Discovery Portal: A Unified Search Engine for Infectious and Immune-Mediated Disease Datasets", "categories": ["cs.DB", "cs.DL", "J.3"], "comment": "20 pages, 3 figures, 1 table, submitted to mSystems", "summary": "The NIAID Data Ecosystem Discovery Portal (https://data.niaid.nih.gov)\nprovides a unified search interface for over 4 million datasets relevant to\ninfectious and immune-mediated disease (IID) research. Integrating metadata\nfrom domain-specific and generalist repositories, the Portal enables\nresearchers to identify and access datasets using user-friendly filters or\nadvanced queries, without requiring technical expertise. The Portal supports\ndiscovery of a wide range of resources, including epidemiological, clinical,\nand multi-omic datasets, and is designed to accommodate exploratory browsing\nand precise searches. The Portal provides filters, prebuilt queries, and\ndataset collections to simplify the discovery process for users. The Portal\nadditionally provides documentation and an API for programmatic access to\nharmonized metadata. By easing access barriers to important biomedical\ndatasets, the NIAID Data Ecosystem Discovery Portal serves as an entry point\nfor researchers working to understand, diagnose, or treat IID.\n  Valuable datasets are often overlooked because they are difficult to locate.\nThe NIAID Data Ecosystem Discovery Portal fills this gap by providing a\ncentralized, searchable interface that empowers users with varying levels of\ntechnical expertise to find and reuse data. By standardizing key metadata\nfields and harmonizing heterogeneous formats, the Portal improves data\nfindability, accessibility, and reusability. This resource supports hypothesis\ngeneration, comparative analysis, and secondary use of public data by the IID\nresearch community, including those funded by NIAID. The Portal supports data\nsharing by standardizing metadata and linking to source repositories, and\nmaximizes the impact of public investment in research data by supporting\nscientific advancement via secondary use.", "AI": {"tldr": "\u8fbe\u5230API\u914d\u989d\u9650\u5236\uff0c\u8bf7\u660e\u5929\u518d\u8bd5", "motivation": "Error: API quota exceeded", "method": "Error: API quota exceeded", "result": "Error: API quota exceeded", "conclusion": "\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\u6216\u7b49\u5f85\u660e\u5929API\u914d\u989d\u91cd\u7f6e\u3002"}}
{"id": "2509.13565", "pdf": "https://arxiv.org/pdf/2509.13565", "abs": "https://arxiv.org/abs/2509.13565", "authors": ["Christoph Standke", "Benny Kimelfeld"], "title": "Tractability Frontiers of the Shapley Value for Aggregate Conjunctive Queries", "categories": ["cs.DB"], "comment": null, "summary": "In recent years, the Shapley value has emerged as a general game-theoretic\nmeasure for assessing the contribution of a tuple to the result of a database\nquery. We study the complexity of calculating the Shapley value of a tuple for\nan aggregate conjunctive query, which applies an aggregation function to the\nresult of a conjunctive query (CQ) based on a value function that assigns a\nnumber to each query answer. Prior work by Livshits, Bertossi, Kimelfeld, and\nSebag (2020) established that this task is #P-hard for every nontrivial\naggregation function when the query is non-hierarchical with respect to its\nexistential variables, assuming the absence of self-joins. They further showed\nthat this condition precisely characterizes the class of intractable CQs when\nthe aggregate function is sum or count. In addition, they posed as open\nproblems the complexity of other common aggregate functions such as min, max,\ncount-distinct, average, and quantile (including median). Towards the\nresolution of these problems, we identify for each aggregate function a class\nof hierarchical CQs where the Shapley value is tractable with every value\nfunction, as long as it is local (i.e., determined by the tuples of one\nrelation). We further show that each such class is maximal: for every CQ\noutside of this class, there is a local (easy-to-compute) value function that\nmakes the Shapley value #P-hard. Interestingly, our results reveal that each\naggregate function corresponds to a different generalization of the class of\nhierarchical CQs from Boolean to non-Boolean queries. In particular, max, min,\nand count-distinct match the class of CQs that are all-hierarchical (i.e.,\nhierarchical with respect to all variables), and average and quantile match the\nnarrower class of q-hierarchical CQs introduced by Berkholz, Keppeler, and\nSchweikardt (2017) in the context of the fine-grained complexity of query\nanswering.", "AI": {"tldr": "\u8fbe\u5230API\u914d\u989d\u9650\u5236\uff0c\u8bf7\u660e\u5929\u518d\u8bd5", "motivation": "Error: API quota exceeded", "method": "Error: API quota exceeded", "result": "Error: API quota exceeded", "conclusion": "\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\u6216\u7b49\u5f85\u660e\u5929API\u914d\u989d\u91cd\u7f6e\u3002"}}
{"id": "2509.13566", "pdf": "https://arxiv.org/pdf/2509.13566", "abs": "https://arxiv.org/abs/2509.13566", "authors": ["Denis Spasyuk"], "title": "XASDB -- Design and Implementation of an Open-Access Spectral Database", "categories": ["cs.DB", "physics.data-an"], "comment": null, "summary": "The increasing volume and complexity of X-ray absorption spectroscopy (XAS)\ndata generated at synchrotron facilities worldwide require robust\ninfrastructure for data management, sharing, and analysis. This paper\nintroduces the XAS Database (XASDB), a comprehensive web-based platform\ndeveloped and hosted by the Canadian Light Source (CLS). The database houses\nmore than 1000 reference spectra spanning 40 elements and 324 chemical\ncompounds. The platform employs a Node.js/MongoDB architecture designed to\nhandle diverse data formats from multiple beamlines and synchrotron facilities.\nA key innovation is the XASproc JavaScript library, which enables browser-based\nXAS data processing including normalization, background sub- traction, extended\nX-ray absorption fine structure (EXAFS) extraction, and preliminary analysis\ntraditionally limited to desktop applications. The integrated XASVue spectral\nviewer provides installation-free data visualization and analysis with broad\naccessibility across devices and operating systems. By offering standardized\ndata output, comprehensive metadata, and integrated analytical ca- pabilities,\nXASDB facilitates collaborative research and promotes FAIR (Findable,\nAccessible, In- teroperable, and Reusable) data principles. The platform serves\nas a valuable resource for linear combination fitting (LCF) analysis, machine\nlearning applications, and educational purposes. This initiative demonstrates\nthe potential for web-centric approaches in XAS data analysis, accelerating\nadvances in materials science, environmental research, chemistry, and biology.", "AI": {"tldr": "\u8fbe\u5230API\u914d\u989d\u9650\u5236\uff0c\u8bf7\u660e\u5929\u518d\u8bd5", "motivation": "Error: API quota exceeded", "method": "Error: API quota exceeded", "result": "Error: API quota exceeded", "conclusion": "\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\u6216\u7b49\u5f85\u660e\u5929API\u914d\u989d\u91cd\u7f6e\u3002"}}
{"id": "2509.14144", "pdf": "https://arxiv.org/pdf/2509.14144", "abs": "https://arxiv.org/abs/2509.14144", "authors": ["Zheng Luo", "Wim Van den Broeck", "Guy Van den Broeck", "Yisu Remy Wang"], "title": "Algorithms for Optimizing Acyclic Queries", "categories": ["cs.DB", "cs.DS"], "comment": null, "summary": "Most research on query optimization has centered on binary join algorithms\nlike hash join and sort-merge join. However, recent years have seen growing\ninterest in theoretically optimal algorithms, notably Yannakakis' algorithm.\nThese algorithms rely on join trees, which differ from the operator trees for\nbinary joins and require new optimization techniques. We propose three\napproaches to constructing join trees for acyclic queries. First, we give an\nalgorithm to enumerate all join trees of an alpha-acyclic query by edits with\namortized constant delay, which forms the basis of a cost-based optimizer for\nacyclic joins. Second, we show that the Maximum Cardinality Search algorithm by\nTarjan and Yannakakis constructs a unique shallowest join tree, rooted at any\nrelation, for a Berge-acyclic query; this tree enables parallel execution of\nlarge join queries. Finally, we prove that any connected left-deep linear plan\nfor a gamma-acyclic query can be converted into a join tree by a simple\nalgorithm, allowing reuse of optimization infrastructure developed for binary\njoins.", "AI": {"tldr": "\u8fbe\u5230API\u914d\u989d\u9650\u5236\uff0c\u8bf7\u660e\u5929\u518d\u8bd5", "motivation": "Error: API quota exceeded", "method": "Error: API quota exceeded", "result": "Error: API quota exceeded", "conclusion": "\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\u6216\u7b49\u5f85\u660e\u5929API\u914d\u989d\u91cd\u7f6e\u3002"}}
{"id": "2509.13978", "pdf": "https://arxiv.org/pdf/2509.13978", "abs": "https://arxiv.org/abs/2509.13978", "authors": ["Renan Souza", "Timothy Poteet", "Brian Etz", "Daniel Rosendo", "Amal Gueroudji", "Woong Shin", "Prasanna Balaprakash", "Rafael Ferreira da Silva"], "title": "LLM Agents for Interactive Workflow Provenance: Reference Architecture and Evaluation Methodology", "categories": ["cs.DC", "cs.AI", "cs.DB", "68M14, 68M20, 68T07", "C.2.4; D.1.3; I.2.0"], "comment": "Paper accepted in the proceedings of the ACM/IEEE Supercomputing\n  Conference (SC). Cite it as Renan Souza, Timothy Poteet, Brian Etz, Daniel\n  Rosendo, Amal Gueroudji, Woong Shin, Prasanna Balaprakash, and Rafael\n  Ferreira da Silva. 2025. LLM Agents for Interactive Workflow Provenance:\n  Reference Architecture and Evaluation Methodology. In SC Workshops (WORKS)", "summary": "Modern scientific discovery increasingly relies on workflows that process\ndata across the Edge, Cloud, and High Performance Computing (HPC) continuum.\nComprehensive and in-depth analyses of these data are critical for hypothesis\nvalidation, anomaly detection, reproducibility, and impactful findings.\nAlthough workflow provenance techniques support such analyses, at large scale,\nthe provenance data become complex and difficult to analyze. Existing systems\ndepend on custom scripts, structured queries, or static dashboards, limiting\ndata interaction. In this work, we introduce an evaluation methodology,\nreference architecture, and open-source implementation that leverages\ninteractive Large Language Model (LLM) agents for runtime data analysis. Our\napproach uses a lightweight, metadata-driven design that translates natural\nlanguage into structured provenance queries. Evaluations across LLaMA, GPT,\nGemini, and Claude, covering diverse query classes and a real-world chemistry\nworkflow, show that modular design, prompt tuning, and Retrieval-Augmented\nGeneration (RAG) enable accurate and insightful LLM agent responses beyond\nrecorded provenance.", "AI": {"tldr": "\u8fbe\u5230API\u914d\u989d\u9650\u5236\uff0c\u8bf7\u660e\u5929\u518d\u8bd5", "motivation": "Error: API quota exceeded", "method": "Error: API quota exceeded", "result": "Error: API quota exceeded", "conclusion": "\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\u6216\u7b49\u5f85\u660e\u5929API\u914d\u989d\u91cd\u7f6e\u3002"}}
