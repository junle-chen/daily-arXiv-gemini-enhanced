{"id": "2510.05612", "pdf": "https://arxiv.org/pdf/2510.05612", "abs": "https://arxiv.org/abs/2510.05612", "authors": ["Utsav Pathak", "Amit Mankodi"], "title": "Redefining Cost Estimation in Database Systems: The Role of Execution Plan Features and Machine Learning", "categories": ["cs.DB"], "comment": "12 pages, 5 figures, conference", "summary": "Accurate query runtime prediction is a critical component of effective query\noptimization in modern database systems. Traditional cost models, such as those\nused in PostgreSQL, rely on static heuristics that often fail to reflect actual\nquery performance under complex and evolving workloads. This remains an active\narea of research, with recent work exploring machine learning techniques to\nreplace or augment traditional cost estimators. In this paper, we present a\nmachine learning-based framework for predicting SQL query runtimes using\nexecution plan features extracted from PostgreSQL. Our approach integrates\nscalar and structural features from execution plans and semantic\nrepresentations of SQL queries to train predictive models. We construct an\nautomated pipeline for data collection and feature extraction using\nparameterized TPC-H queries, enabling systematic evaluation of multiple\nmodeling techniques. Unlike prior efforts that focus either on cardinality\nestimation or on synthetic cost metrics, we model the actual runtimes using\nfine-grained plan statistics and query embeddings derived from execution\ntraces, to improve the model accuracy. We compare baseline regressors, a\nrefined XGBoost model, and a sequential LSTM-based model to assess their\neffectiveness in runtime prediction. Our dataset includes over 1000 queries\ngenerated from TPC-H query templates executed in PostgreSQL with EXPLAIN\nANALYZE. Experimental results show that the XGBoost model significantly\noutperforms others, achieving a mean squared error of 0.3002 and prediction\naccuracy within 10% of the true runtime in over 65% of cases. The findings\nhighlight the potential of tree-based learning combined with execution plan\nfeatures for improving cost estimation in query optimizers.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u6846\u67b6\uff0c\u5229\u7528PostgreSQL\u7684\u6267\u884c\u8ba1\u5212\u7279\u5f81\u9884\u6d4bSQL\u67e5\u8be2\u7684\u8fd0\u884c\u65f6\u957f\u3002", "motivation": "\u4f20\u7edf\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u6210\u672c\u6a21\u578b\u4f9d\u8d56\u4e8e\u9759\u6001\u542f\u53d1\u5f0f\u65b9\u6cd5\uff0c\u96be\u4ee5\u51c6\u786e\u53cd\u6620\u590d\u6742\u548c\u4e0d\u65ad\u53d8\u5316\u7684\u5de5\u4f5c\u8d1f\u8f7d\u4e0b\u7684\u5b9e\u9645\u67e5\u8be2\u6027\u80fd\u3002", "method": "\u8be5\u65b9\u6cd5\u96c6\u6210\u4e86\u6267\u884c\u8ba1\u5212\u4e2d\u7684\u6807\u91cf\u548c\u7ed3\u6784\u7279\u5f81\u4ee5\u53caSQL\u67e5\u8be2\u7684\u8bed\u4e49\u8868\u793a\uff0c\u4ee5\u8bad\u7ec3\u9884\u6d4b\u6a21\u578b\u3002\u6784\u5efa\u4e86\u4e00\u4e2a\u81ea\u52a8\u5316\u7684\u6570\u636e\u6536\u96c6\u548c\u7279\u5f81\u63d0\u53d6\u7ba1\u9053\uff0c\u4f7f\u7528\u53c2\u6570\u5316\u7684TPC-H\u67e5\u8be2\uff0c\u4ece\u800c\u80fd\u591f\u7cfb\u7edf\u5730\u8bc4\u4f30\u591a\u79cd\u5efa\u6a21\u6280\u672f\u3002", "result": "\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0cXGBoost\u6a21\u578b\u660e\u663e\u4f18\u4e8e\u5176\u4ed6\u6a21\u578b\uff0c\u5747\u65b9\u8bef\u5dee\u4e3a0.3002\uff0c\u8d85\u8fc765%\u7684\u60c5\u51b5\u4e0b\uff0c\u9884\u6d4b\u7cbe\u5ea6\u5728\u5b9e\u9645\u8fd0\u884c\u65f6\u768410%\u4ee5\u5185\u3002", "conclusion": "\u7814\u7a76\u7ed3\u679c\u7a81\u51fa\u4e86\u57fa\u4e8e\u6811\u7684\u5b66\u4e60\u4e0e\u6267\u884c\u8ba1\u5212\u7279\u5f81\u76f8\u7ed3\u5408\u5728\u6539\u8fdb\u67e5\u8be2\u4f18\u5316\u5668\u4e2d\u7684\u6210\u672c\u4f30\u7b97\u65b9\u9762\u7684\u6f5c\u529b\u3002", "summary_zh": "\u5728\u73b0\u4ee3\u6570\u636e\u5e93\u7cfb\u7edf\u4e2d\uff0c\u51c6\u786e\u7684\u67e5\u8be2\u8fd0\u884c\u65f6\u9884\u6d4b\u662f\u6709\u6548\u67e5\u8be2\u4f18\u5316\u7684\u5173\u952e\u7ec4\u6210\u90e8\u5206\u3002\u4f20\u7edf\u7684\u6210\u672c\u6a21\u578b\uff0c\u4f8b\u5982PostgreSQL\u4e2d\u4f7f\u7528\u7684\u6210\u672c\u6a21\u578b\uff0c\u4f9d\u8d56\u4e8e\u9759\u6001\u542f\u53d1\u5f0f\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u901a\u5e38\u65e0\u6cd5\u53cd\u6620\u590d\u6742\u548c\u4e0d\u65ad\u53d8\u5316\u7684\u5de5\u4f5c\u8d1f\u8f7d\u4e0b\u7684\u5b9e\u9645\u67e5\u8be2\u6027\u80fd\u3002\u8fd9\u4ecd\u7136\u662f\u4e00\u4e2a\u6d3b\u8dc3\u7684\u7814\u7a76\u9886\u57df\uff0c\u6700\u8fd1\u7684\u5de5\u4f5c\u63a2\u7d22\u4e86\u673a\u5668\u5b66\u4e60\u6280\u672f\u6765\u66ff\u4ee3\u6216\u589e\u5f3a\u4f20\u7edf\u7684\u6210\u672c\u4f30\u7b97\u5668\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u4e2a\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u6846\u67b6\uff0c\u7528\u4e8e\u9884\u6d4bSQL\u67e5\u8be2\u8fd0\u884c\u65f6\uff0c\u8be5\u6846\u67b6\u4f7f\u7528\u4ecePostgreSQL\u63d0\u53d6\u7684\u6267\u884c\u8ba1\u5212\u7279\u5f81\u3002\u6211\u4eec\u7684\u65b9\u6cd5\u96c6\u6210\u4e86\u6267\u884c\u8ba1\u5212\u4e2d\u7684\u6807\u91cf\u548c\u7ed3\u6784\u7279\u5f81\u4ee5\u53caSQL\u67e5\u8be2\u7684\u8bed\u4e49\u8868\u793a\uff0c\u4ee5\u8bad\u7ec3\u9884\u6d4b\u6a21\u578b\u3002\u6211\u4eec\u6784\u5efa\u4e86\u4e00\u4e2a\u81ea\u52a8\u5316\u7684\u6570\u636e\u6536\u96c6\u548c\u7279\u5f81\u63d0\u53d6\u7ba1\u9053\uff0c\u4f7f\u7528\u53c2\u6570\u5316\u7684TPC-H\u67e5\u8be2\uff0c\u4ece\u800c\u80fd\u591f\u7cfb\u7edf\u5730\u8bc4\u4f30\u591a\u79cd\u5efa\u6a21\u6280\u672f\u3002\u4e0e\u4e4b\u524d\u4ec5\u5173\u6ce8\u57fa\u6570\u4f30\u8ba1\u6216\u5408\u6210\u6210\u672c\u6307\u6807\u7684\u5de5\u4f5c\u4e0d\u540c\uff0c\u6211\u4eec\u4f7f\u7528\u4ece\u6267\u884c\u8ddf\u8e2a\u5bfc\u51fa\u7684\u7ec6\u7c92\u5ea6\u8ba1\u5212\u7edf\u8ba1\u4fe1\u606f\u548c\u67e5\u8be2\u5d4c\u5165\u6765\u5efa\u6a21\u5b9e\u9645\u8fd0\u884c\u65f6\uff0c\u4ee5\u63d0\u9ad8\u6a21\u578b\u51c6\u786e\u6027\u3002\u6211\u4eec\u6bd4\u8f83\u4e86\u57fa\u7ebf\u56de\u5f52\u6a21\u578b\u3001\u6539\u8fdb\u7684XGBoost\u6a21\u578b\u548c\u57fa\u4e8e\u5e8f\u5217LSTM\u7684\u6a21\u578b\uff0c\u4ee5\u8bc4\u4f30\u5b83\u4eec\u5728\u8fd0\u884c\u65f6\u9884\u6d4b\u4e2d\u7684\u6709\u6548\u6027\u3002\u6211\u4eec\u7684\u6570\u636e\u96c6\u5305\u62ec1000\u591a\u4e2a\u67e5\u8be2\uff0c\u8fd9\u4e9b\u67e5\u8be2\u6765\u81ea\u5728PostgreSQL\u4e2d\u4f7f\u7528EXPLAIN ANALYZE\u6267\u884c\u7684TPC-H\u67e5\u8be2\u6a21\u677f\u3002\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0cXGBoost\u6a21\u578b\u660e\u663e\u4f18\u4e8e\u5176\u4ed6\u6a21\u578b\uff0c\u5747\u65b9\u8bef\u5dee\u4e3a0.3002\uff0c\u8d85\u8fc765%\u7684\u60c5\u51b5\u4e0b\uff0c\u9884\u6d4b\u7cbe\u5ea6\u5728\u5b9e\u9645\u8fd0\u884c\u65f6\u768410%\u4ee5\u5185\u3002\u7814\u7a76\u7ed3\u679c\u7a81\u51fa\u4e86\u57fa\u4e8e\u6811\u7684\u5b66\u4e60\u4e0e\u6267\u884c\u8ba1\u5212\u7279\u5f81\u76f8\u7ed3\u5408\u5728\u6539\u8fdb\u67e5\u8be2\u4f18\u5316\u5668\u4e2d\u7684\u6210\u672c\u4f30\u7b97\u65b9\u9762\u7684\u6f5c\u529b\u3002"}}
{"id": "2510.05907", "pdf": "https://arxiv.org/pdf/2510.05907", "abs": "https://arxiv.org/abs/2510.05907", "authors": ["Dmitrii Radivonchik", "Yakov Kuzin", "Anton Chizhov", "Dmitriy Shcheka", "Mikhail Firsov", "Kirill Smirnov", "George Chernishev"], "title": "Speeding up SQL subqueries via decoupling of non-correlated predicate (extended version)", "categories": ["cs.DB", "cs.PF", "cs.SE", "H.2.4; E.1"], "comment": null, "summary": "In this paper, we discuss a novel technique for processing correlated\nsubqueries in SQL. The core idea is to isolate the non-correlated part of the\npredicate and use it to reduce the number of evaluations of the correlated\npart. We begin by providing an overview of several classes of queries that may\nbenefit from this technique. For each class, we propose a potential rewrite and\ndiscuss the conditions under which it is advantageous. Next, we address the\nevaluation aspects of the proposed rewrites: 1) we describe our approach to\nadapting the block-based Volcano query processing model, and 2) we discuss the\nbenefits of implementing that technique within a position-enabled column-store\nwith late materialization support. Finally, we present a simple cost model that\nallows estimation of the benefits of said rewrites.\n  Our evaluation has a quantitative part and a qualitative part. The former\nfocuses on studying the impact of non-correlated predicate selectivity on our\ntechnique. The latter identifies the limitations of our approach by comparing\nit with alternative approaches available in existing systems. Overall,\nexperiments conducted using PosDB (a position-enabled column-store) and\nPostgreSQL demonstrated that, under suitable conditions, our technique can\nachieve a 5x improvement.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u5904\u7406SQL\u76f8\u5173\u5b50\u67e5\u8be2\u7684\u65b0\u6280\u672f\uff0c\u901a\u8fc7\u9694\u79bb\u8c13\u8bcd\u7684\u975e\u76f8\u5173\u90e8\u5206\u6765\u51cf\u5c11\u76f8\u5173\u90e8\u5206\u7684\u8bc4\u4f30\u6b21\u6570\u3002", "motivation": "\u672c\u6587\u65e8\u5728\u89e3\u51b3SQL\u4e2d\u76f8\u5173\u5b50\u67e5\u8be2\u7684\u5904\u7406\u6548\u7387\u95ee\u9898\u3002", "method": "\u672c\u6587\u63d0\u51fa\u901a\u8fc7\u9694\u79bb\u8c13\u8bcd\u7684\u975e\u76f8\u5173\u90e8\u5206\uff0c\u5e76\u91cd\u5199\u67e5\u8be2\u6765\u4f18\u5316\u76f8\u5173\u5b50\u67e5\u8be2\u7684\u5904\u7406\u3002\u540c\u65f6\uff0c\u6539\u8fdb\u4e86\u57fa\u4e8e\u5757\u7684Volcano\u67e5\u8be2\u5904\u7406\u6a21\u578b\uff0c\u5e76\u7ed3\u5408position-enabled column-store\u548clate materialization\u652f\u6301\u3002", "result": "\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0c\u5728\u9002\u5f53\u6761\u4ef6\u4e0b\uff0c\u8be5\u6280\u672f\u53ef\u4ee5\u5b9e\u73b05\u500d\u7684\u6027\u80fd\u63d0\u5347\u3002", "conclusion": "\u672c\u6587\u63d0\u51fa\u7684\u6280\u672f\u5728\u5904\u7406SQL\u76f8\u5173\u5b50\u67e5\u8be2\u65b9\u9762\u5177\u6709\u663e\u8457\u7684\u6027\u80fd\u4f18\u52bf\uff0c\u4f46\u540c\u65f6\u4e5f\u5b58\u5728\u4e00\u5b9a\u7684\u5c40\u9650\u6027\u3002", "summary_zh": "\u672c\u6587\u8ba8\u8bba\u4e86\u4e00\u79cd\u5728SQL\u4e2d\u5904\u7406\u76f8\u5173\u5b50\u67e5\u8be2\u7684\u65b0\u6280\u672f\u3002\u5176\u6838\u5fc3\u601d\u60f3\u662f\u9694\u79bb\u8c13\u8bcd\u7684\u975e\u76f8\u5173\u90e8\u5206\uff0c\u5e76\u7528\u5b83\u6765\u51cf\u5c11\u76f8\u5173\u90e8\u5206\u7684\u8bc4\u4f30\u6b21\u6570\u3002\u6211\u4eec\u9996\u5148\u6982\u8ff0\u4e86\u51e0\u7c7b\u53ef\u80fd\u4ece\u6b64\u6280\u672f\u4e2d\u53d7\u76ca\u7684\u67e5\u8be2\u3002\u5bf9\u4e8e\u6bcf\u4e00\u7c7b\uff0c\u6211\u4eec\u90fd\u63d0\u51fa\u4e86\u4e00\u4e2a\u6f5c\u5728\u7684\u91cd\u5199\uff0c\u5e76\u8ba8\u8bba\u4e86\u5b83\u6709\u5229\u7684\u6761\u4ef6\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u6240\u63d0\u51fa\u7684\u91cd\u5199\u7684\u8bc4\u4f30\u65b9\u9762\uff1a1\uff09\u6211\u4eec\u63cf\u8ff0\u4e86\u6211\u4eec\u9002\u5e94\u57fa\u4e8e\u5757\u7684Volcano\u67e5\u8be2\u5904\u7406\u6a21\u578b\u7684\u65b9\u6cd5\uff0c\u4ee5\u53ca2\uff09\u6211\u4eec\u8ba8\u8bba\u4e86\u5728\u5177\u6709\u540e\u671f\u7269\u5316\u652f\u6301\u7684\u4f4d\u7f6e\u542f\u7528\u5217\u5b58\u50a8\u4e2d\u5b9e\u73b0\u8be5\u6280\u672f\u7684\u597d\u5904\u3002\u6700\u540e\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u6210\u672c\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u5141\u8bb8\u4f30\u8ba1\u6240\u8ff0\u91cd\u5199\u7684\u597d\u5904\u3002\u6211\u4eec\u7684\u8bc4\u4f30\u6709\u4e00\u4e2a\u5b9a\u91cf\u90e8\u5206\u548c\u4e00\u4e2a\u5b9a\u6027\u90e8\u5206\u3002\u524d\u8005\u4fa7\u91cd\u4e8e\u7814\u7a76\u975e\u76f8\u5173\u8c13\u8bcd\u9009\u62e9\u6027\u5bf9\u6211\u4eec\u6280\u672f\u7684\u5f71\u54cd\u3002\u540e\u8005\u901a\u8fc7\u5c06\u5176\u4e0e\u73b0\u6709\u7cfb\u7edf\u4e2d\u53ef\u7528\u7684\u66ff\u4ee3\u65b9\u6cd5\u8fdb\u884c\u6bd4\u8f83\uff0c\u786e\u5b9a\u4e86\u6211\u4eec\u65b9\u6cd5\u7684\u5c40\u9650\u6027\u3002\u603b\u7684\u6765\u8bf4\uff0c\u4f7f\u7528PosDB\uff08\u4e00\u4e2a\u4f4d\u7f6e\u542f\u7528\u7684\u5217\u5b58\u50a8\uff09\u548cPostgreSQL\u8fdb\u884c\u7684\u5b9e\u9a8c\u8868\u660e\uff0c\u5728\u5408\u9002\u7684\u6761\u4ef6\u4e0b\uff0c\u6211\u4eec\u7684\u6280\u672f\u53ef\u4ee5\u5b9e\u73b05\u500d\u7684\u6539\u8fdb\u3002"}}
{"id": "2510.05805", "pdf": "https://arxiv.org/pdf/2510.05805", "abs": "https://arxiv.org/abs/2510.05805", "authors": ["Pafue Christy Nganjimi", "Andrew Soltan", "Danielle Belgrave", "Lei Clifton", "David A. Clifton", "Anshul Thakur"], "title": "Improving Clinical Dataset Condensation with Mode Connectivity-based Trajectory Surrogates", "categories": ["cs.LG", "cs.CV", "cs.DB"], "comment": "20 pages, 4 figures, Submitted to AISTATS 2026", "summary": "Dataset condensation (DC) enables the creation of compact, privacy-preserving\nsynthetic datasets that can match the utility of real patient records,\nsupporting democratised access to highly regulated clinical data for developing\ndownstream clinical models. State-of-the-art DC methods supervise synthetic\ndata by aligning the training dynamics of models trained on real and those\ntrained on synthetic data, typically using full stochastic gradient descent\n(SGD) trajectories as alignment targets; however, these trajectories are often\nnoisy, high-curvature, and storage-intensive, leading to unstable gradients,\nslow convergence, and substantial memory overhead. We address these limitations\nby replacing full SGD trajectories with smooth, low-loss parametric surrogates,\nspecifically quadratic B\\'ezier curves that connect the initial and final model\nstates from real training trajectories. These mode-connected paths provide\nnoise-free, low-curvature supervision signals that stabilise gradients,\naccelerate convergence, and eliminate the need for dense trajectory storage. We\ntheoretically justify B\\'ezier-mode connections as effective surrogates for SGD\npaths and empirically show that the proposed method outperforms\nstate-of-the-art condensation approaches across five clinical datasets,\nyielding condensed datasets that enable clinically effective model development.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u4f7f\u7528\u4e8c\u6b21\u8d1d\u585e\u5c14\u66f2\u7ebf\u8fde\u63a5\u6a21\u578b\u72b6\u6001\u7684\u5e73\u6ed1\u3001\u4f4e\u566a\u58f0\u7684\u6570\u636e\u96c6\u7cbe\u7b80\u65b9\u6cd5\uff0c\u4ee5\u514b\u670d\u4f20\u7edfSGD\u8f68\u8ff9\u7684\u5c40\u9650\u6027\u3002", "motivation": "\u73b0\u6709\u6570\u636e\u96c6\u7cbe\u7b80\u65b9\u6cd5\u4f7f\u7528\u5b8c\u6574SGD\u8f68\u8ff9\u4f5c\u4e3a\u5bf9\u9f50\u76ee\u6807\uff0c\u4f46\u8fd9\u4e9b\u8f68\u8ff9\u901a\u5e38\u566a\u58f0\u5927\u3001\u66f2\u7387\u9ad8\u3001\u5b58\u50a8\u5bc6\u96c6\uff0c\u5bfc\u81f4\u68af\u5ea6\u4e0d\u7a33\u5b9a\u3001\u6536\u655b\u6162\u548c\u5185\u5b58\u5f00\u9500\u5927\u3002", "method": "\u63d0\u51fa\u7528\u5e73\u6ed1\u3001\u4f4e\u635f\u8017\u7684\u53c2\u6570\u5316\u66ff\u4ee3\u7269\uff08\u7279\u522b\u662f\u8fde\u63a5\u771f\u5b9e\u8bad\u7ec3\u8f68\u8ff9\u7684\u521d\u59cb\u548c\u6700\u7ec8\u6a21\u578b\u72b6\u6001\u7684\u4e8c\u6b21\u8d1d\u585e\u5c14\u66f2\u7ebf\uff09\u6765\u4ee3\u66ff\u5b8c\u6574\u7684SGD\u8f68\u8ff9\u3002", "result": "\u5728\u4e94\u4e2a\u4e34\u5e8a\u6570\u636e\u96c6\u4e0a\uff0c\u8be5\u65b9\u6cd5\u4f18\u4e8e\u6700\u5148\u8fdb\u7684\u7cbe\u7b80\u65b9\u6cd5\uff0c\u4ea7\u751f\u4e86\u80fd\u591f\u5b9e\u73b0\u4e34\u5e8a\u6709\u6548\u6a21\u578b\u5f00\u53d1\u7684\u7cbe\u7b80\u6570\u636e\u96c6\u3002", "conclusion": "\u4f7f\u7528\u8d1d\u585e\u5c14\u6a21\u5f0f\u8fde\u63a5\u4f5c\u4e3aSGD\u8def\u5f84\u7684\u6709\u6548\u66ff\u4ee3\u7269\u5728\u7406\u8bba\u4e0a\u662f\u5408\u7406\u7684\uff0c\u5e76\u4e14\u5728\u7ecf\u9a8c\u4e0a\u8868\u660e\u6240\u63d0\u51fa\u7684\u65b9\u6cd5\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\u3002", "summary_zh": "\u6570\u636e\u96c6\u7cbe\u7b80 (DC) \u80fd\u591f\u521b\u5efa\u7d27\u51d1\u3001\u4fdd\u62a4\u9690\u79c1\u7684\u5408\u6210\u6570\u636e\u96c6\uff0c\u8fd9\u4e9b\u6570\u636e\u96c6\u53ef\u4ee5\u5339\u914d\u771f\u5b9e\u60a3\u8005\u8bb0\u5f55\u7684\u6548\u7528\uff0c\u4ece\u800c\u652f\u6301\u5bf9\u9ad8\u5ea6\u76d1\u7ba1\u7684\u4e34\u5e8a\u6570\u636e\u8fdb\u884c\u6c11\u4e3b\u5316\u8bbf\u95ee\uff0c\u4ee5\u5f00\u53d1\u4e0b\u6e38\u4e34\u5e8a\u6a21\u578b\u3002 \u6700\u5148\u8fdb\u7684 DC \u65b9\u6cd5\u901a\u8fc7\u5bf9\u9f50\u5728\u771f\u5b9e\u6570\u636e\u4e0a\u8bad\u7ec3\u7684\u6a21\u578b\u548c\u5728\u5408\u6210\u6570\u636e\u4e0a\u8bad\u7ec3\u7684\u6a21\u578b\u7684\u8bad\u7ec3\u52a8\u6001\u6765\u76d1\u7763\u5408\u6210\u6570\u636e\uff0c\u901a\u5e38\u4f7f\u7528\u5b8c\u6574\u7684\u968f\u673a\u68af\u5ea6\u4e0b\u964d (SGD) \u8f68\u8ff9\u4f5c\u4e3a\u5bf9\u9f50\u76ee\u6807\uff1b\u7136\u800c\uff0c\u8fd9\u4e9b\u8f68\u8ff9\u901a\u5e38\u662f\u5608\u6742\u7684\u3001\u9ad8\u66f2\u7387\u7684\u548c\u5b58\u50a8\u5bc6\u96c6\u7684\uff0c\u5bfc\u81f4\u4e0d\u7a33\u5b9a\u7684\u68af\u5ea6\u3001\u7f13\u6162\u7684\u6536\u655b\u548c\u5927\u91cf\u7684\u5185\u5b58\u5f00\u9500\u3002 \u6211\u4eec\u901a\u8fc7\u7528\u5e73\u6ed1\u7684\u3001\u4f4e\u635f\u8017\u7684\u53c2\u6570\u66ff\u4ee3\u7269\u66ff\u6362\u5b8c\u6574\u7684 SGD \u8f68\u8ff9\u6765\u89e3\u51b3\u8fd9\u4e9b\u9650\u5236\uff0c\u7279\u522b\u662f\u8fde\u63a5\u6765\u81ea\u771f\u5b9e\u8bad\u7ec3\u8f68\u8ff9\u7684\u521d\u59cb\u548c\u6700\u7ec8\u6a21\u578b\u72b6\u6001\u7684\u4e8c\u6b21\u8d1d\u585e\u5c14\u66f2\u7ebf\u3002 \u8fd9\u4e9b\u6a21\u5f0f\u8fde\u63a5\u7684\u8def\u5f84\u63d0\u4f9b\u65e0\u566a\u58f0\u3001\u4f4e\u66f2\u7387\u7684\u76d1\u7763\u4fe1\u53f7\uff0c\u53ef\u7a33\u5b9a\u68af\u5ea6\u3001\u52a0\u901f\u6536\u655b\u5e76\u6d88\u9664\u5bf9\u5bc6\u96c6\u8f68\u8ff9\u5b58\u50a8\u7684\u9700\u6c42\u3002 \u6211\u4eec\u5728\u7406\u8bba\u4e0a\u8bc1\u660e\u4e86\u8d1d\u585e\u5c14\u6a21\u5f0f\u8fde\u63a5\u662f SGD \u8def\u5f84\u7684\u6709\u6548\u66ff\u4ee3\u7269\uff0c\u5e76\u901a\u8fc7\u7ecf\u9a8c\u8868\u660e\uff0c\u6240\u63d0\u51fa\u7684\u65b9\u6cd5\u5728\u4e94\u4e2a\u4e34\u5e8a\u6570\u636e\u96c6\u4e2d\u4f18\u4e8e\u6700\u5148\u8fdb\u7684\u7cbe\u7b80\u65b9\u6cd5\uff0c\u4ece\u800c\u4ea7\u751f\u4e86\u80fd\u591f\u5b9e\u73b0\u4e34\u5e8a\u6709\u6548\u6a21\u578b\u5f00\u53d1\u7684\u7cbe\u7b80\u6570\u636e\u96c6\u3002"}}
