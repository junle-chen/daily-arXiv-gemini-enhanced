{"id": "2510.13528", "pdf": "https://arxiv.org/pdf/2510.13528", "abs": "https://arxiv.org/abs/2510.13528", "authors": ["Lo\u00efs Ecoffet", "Veronika Rehn-Sonigo", "Jean-Fran\u00e7ois Couchot", "Catuscia Palamidessi"], "title": "Experiments \\& Analysis of Privacy-Preserving SQL Query Sanitization Systems", "categories": ["cs.DB"], "comment": "10 pages, 5 figures, submitted to EDBT 26", "summary": "Analytical SQL queries are essential for extracting insights from relational\ndatabases but concurrently introduce significant privacy risks by potentially\nexposing sensitive information. To mitigate these risks, numerous query\nsanitization systems have been developed, employing diverse approaches that\ncreate a complex landscape for both researchers and practitioners. These\nsystems vary fundamentally in their design, including the underlying privacy\nmodel, such as k-anonymity or Differential Privacy; the protected privacy unit,\nwhether at the tuple- or user-level; and the software architecture, which can\nbe proxy-based or integrated. This paper provides a systematic classification\nof state-of-the-art SQL sanitization systems based on these qualitative\ncriteria and the scope of queries they support. Furthermore, we present a\nquantitative analysis of leading systems, empirically measuring the trade-offs\nbetween data utility, query execution overhead, and privacy guarantees across a\nrange of analytical queries. This work offers a structured overview and\nperformance assessment intended to clarify the capabilities and limitations of\ncurrent privacy-preserving database technologies."}
{"id": "2510.13662", "pdf": "https://arxiv.org/pdf/2510.13662", "abs": "https://arxiv.org/abs/2510.13662", "authors": ["Mahdi Esmailoghli", "Matthias Weidlich"], "title": "The Past Still Matters: A Temporally-Valid Data Discovery System", "categories": ["cs.DB"], "comment": null, "summary": "Over the past decade, the proliferation of public and enterprise data lakes\nhas fueled intensive research into data discovery, aiming to identify the most\nrelevant data from vast and complex corpora to support diverse user tasks.\nSignificant progress has been made through the development of innovative index\nstructures, similarity measures, and querying infrastructures. Despite these\nadvances, a critical aspect remains overlooked: relevance is time-varying.\nExisting discovery methods largely ignore this temporal dimension, especially\nwhen explicit date/time metadata is missing. To fill this gap, we outline a\nvision for a data discovery system that incorporates the temporal dimension of\ndata. Specifically, we define the problem of temporally-valid data discovery\nand argue that addressing it requires techniques for version discovery,\ntemporal lineage inference, change log synthesis, and time-aware data\ndiscovery. We then present a system architecture to deliver these techniques,\nbefore we summarize research challenges and opportunities. As such, we lay the\nfoundation for a new class of data discovery systems, transforming how we\ninteract with evolving data lakes."}
{"id": "2510.12825", "pdf": "https://arxiv.org/pdf/2510.12825", "abs": "https://arxiv.org/abs/2510.12825", "authors": ["Thomas Gschwind", "Shramona Chakraborty", "Nitin Gupta", "Sameep Mehta"], "title": "Classifier-Augmented Generation for Structured Workflow Prediction", "categories": ["cs.CL", "cs.AI", "cs.DB", "cs.LG", "68T50, 68T05, 68T09", "I.2.7; I.2.6; H.2.5"], "comment": "Accepted at EMNLP 2025", "summary": "ETL (Extract, Transform, Load) tools such as IBM DataStage allow users to\nvisually assemble complex data workflows, but configuring stages and their\nproperties remains time consuming and requires deep tool knowledge. We propose\na system that translates natural language descriptions into executable\nworkflows, automatically predicting both the structure and detailed\nconfiguration of the flow. At its core lies a Classifier-Augmented Generation\n(CAG) approach that combines utterance decomposition with a classifier and\nstage-specific few-shot prompting to produce accurate stage predictions. These\nstages are then connected into non-linear workflows using edge prediction, and\nstage properties are inferred from sub-utterance context. We compare CAG\nagainst strong single-prompt and agentic baselines, showing improved accuracy\nand efficiency, while substantially reducing token usage. Our architecture is\nmodular, interpretable, and capable of end-to-end workflow generation,\nincluding robust validation steps. To our knowledge, this is the first system\nwith a detailed evaluation across stage prediction, edge layout, and property\ngeneration for natural-language-driven ETL authoring."}
{"id": "2510.12831", "pdf": "https://arxiv.org/pdf/2510.12831", "abs": "https://arxiv.org/abs/2510.12831", "authors": ["Taicheng Guo", "Hai Wang", "ChaoChun Liu", "Mohsen Golalikhani", "Xin Chen", "Xiangliang Zhang", "Chandan K. Reddy"], "title": "MTSQL-R1: Towards Long-Horizon Multi-Turn Text-to-SQL via Agentic Training", "categories": ["cs.CL", "cs.AI", "cs.DB", "cs.LG"], "comment": null, "summary": "Multi-turn Text-to-SQL aims to translate a user's conversational utterances\ninto executable SQL while preserving dialogue coherence and grounding to the\ntarget schema. However, most existing systems only regard this task as a simple\ntext translation task and follow a short-horizon paradigm, generating a query\nper turn without execution, explicit verification, and refinement, which leads\nto non-executable or incoherent outputs. We present MTSQL-R1, an agentic\ntraining framework for long-horizon multi-turn Text-to-SQL. We cast the task as\na Markov Decision Process (MDP) in which an agent interacts with (i) a database\nfor execution feedback and (ii) a persistent dialogue memory for coherence\nverification, performing an iterative propose to execute -> verify -> refine\ncycle until all checks pass. Experiments on COSQL and SPARC demonstrate that\nMTSQL-R1 consistently outperforms strong baselines, highlighting the importance\nof environment-driven verification and memory-guided refinement for\nconversational semantic parsing. Full recipes (including code, trained models,\nlogs, reasoning trajectories, etc.) will be released after the internal review\nto contribute to community research."}
