{"id": "2510.06414", "pdf": "https://arxiv.org/pdf/2510.06414", "abs": "https://arxiv.org/abs/2510.06414", "authors": ["Abdur Rehman Anwar Qureshi", "Adrian Rebmann", "Timotheus Kampik", "Matthias Weidlich", "Mathias Weske"], "title": "Bridging Imperative Process Models and Process Data Queries-Translation and Relaxation", "categories": ["cs.DB", "cs.SE"], "comment": null, "summary": "Business process management is increasingly practiced using data-driven\napproaches. Still, classical imperative process models, which are typically\nformalized using Petri nets, are not straightforwardly applicable to the\nrelational databases that contain much of the available structured process\nexecution data. This creates a gap between the traditional world of process\nmodeling and recent developments around data-driven process analysis,\nultimately leading to the under-utilization of often readily available process\nmodels. In this paper, we close this gap by providing an approach for\ntranslating imperative models into relaxed process data queries, specifically\nSQL queries executable on relational databases, for conformance checking. Our\nresults show the continued relevance of imperative process models to\ndata-driven process management, as well as the importance of behavioral\nfootprints and other declarative approaches for integrating model-based and\ndata-driven process management."}
{"id": "2510.06663", "pdf": "https://arxiv.org/pdf/2510.06663", "abs": "https://arxiv.org/abs/2510.06663", "authors": ["Qiuyang Mang", "Runyuan He", "Suyang Zhong", "Xiaoxuan Liu", "Huanchen Zhang", "Alvin Cheung"], "title": "Automated Discovery of Test Oracles for Database Management Systems Using LLMs", "categories": ["cs.DB", "cs.PL", "cs.SE"], "comment": null, "summary": "Since 2020, automated testing for Database Management Systems (DBMSs) has\nflourished, uncovering hundreds of bugs in widely-used systems. A cornerstone\nof these techniques is test oracle, which typically implements a mechanism to\ngenerate equivalent query pairs, thereby identifying bugs by checking the\nconsistency between their results. However, while applying these oracles can be\nautomated, their design remains a fundamentally manual endeavor. This paper\nexplores the use of large language models (LLMs) to automate the discovery and\ninstantiation of test oracles, addressing a long-standing bottleneck towards\nfully automated DBMS testing. Although LLMs demonstrate impressive creativity,\nthey are prone to hallucinations that can produce numerous false positive bug\nreports. Furthermore, their significant monetary cost and latency mean that LLM\ninvocations should be limited to ensure that bug detection is efficient and\neconomical.\n  To this end, we introduce Argus, a novel framework built upon the core\nconcept of the Constrained Abstract Query - a SQL skeleton containing\nplaceholders and their associated instantiation conditions (e.g., requiring a\nplaceholder to be filled by a boolean column). Argus uses LLMs to generate\npairs of these skeletons that are asserted to be semantically equivalent. This\nequivalence is then formally proven using a SQL equivalence solver to ensure\nsoundness. Finally, the placeholders within the verified skeletons are\ninstantiated with concrete, reusable SQL snippets that are also synthesized by\nLLMs to efficiently produce complex test cases. We implemented Argus and\nevaluated it on five extensively tested DBMSs, discovering 40 previously\nunknown bugs, 35 of which are logic bugs, with 36 confirmed and 26 already\nfixed by the developers."}
{"id": "2510.06980", "pdf": "https://arxiv.org/pdf/2510.06980", "abs": "https://arxiv.org/abs/2510.06980", "authors": ["Xinyi Gao", "Jingxi Zhang", "Lijian Chen", "Tong Chen", "Lizhen Cui", "Hongzhi Yin"], "title": "Relational Database Distillation: From Structured Tables to Condensed Graph Data", "categories": ["cs.DB", "cs.LG"], "comment": null, "summary": "Relational databases (RDBs) underpin the majority of global data management\nsystems, where information is structured into multiple interdependent tables.\nTo effectively use the knowledge within RDBs for predictive tasks, recent\nadvances leverage graph representation learning to capture complex inter-table\nrelations as multi-hop dependencies. Despite achieving state-of-the-art\nperformance, these methods remain hindered by the prohibitive storage overhead\nand excessive training time, due to the massive scale of the database and the\ncomputational burden of intensive message passing across interconnected tables.\nTo alleviate these concerns, we propose and study the problem of Relational\nDatabase Distillation (RDD). Specifically, we aim to distill large-scale RDBs\ninto compact heterogeneous graphs while retaining the predictive power (i.e.,\nutility) required for training graph-based models. Multi-modal column\ninformation is preserved through node features, and primary-foreign key\nrelations are encoded via heterogeneous edges, thereby maintaining both data\nfidelity and relational structure. To ensure adaptability across diverse\ndownstream tasks without engaging the traditional, inefficient bi-level\ndistillation framework, we further design a kernel ridge regression-guided\nobjective with pseudo-labels, which produces quality features for the distilled\ngraph. Extensive experiments on multiple real-world RDBs demonstrate that our\nsolution substantially reduces the data size while maintaining competitive\nperformance on classification and regression tasks, creating an effective\npathway for scalable learning with RDBs."}
{"id": "2510.07062", "pdf": "https://arxiv.org/pdf/2510.07062", "abs": "https://arxiv.org/abs/2510.07062", "authors": ["Hadar Rotschield", "Liat Peterfreund"], "title": "On the Expressiveness of Languages for Querying Property Graphs in Relational Databases", "categories": ["cs.DB"], "comment": null, "summary": "SQL/PGQ is the emerging ISO standard for querying property graphs defined as\nviews over relational data. We formalize its expressive power across three\nfragments: the read-only core, the read-write extension, and an extended\nvariant with richer view definitions. Our results show that graph creation\nplays a central role in determining the expressiveness. The read-only fragment\nis strictly weaker than the read-write fragment, and the latter is still below\nthe complexity class NL. Extending view definitions with arbitrary arity\nidentifiers closes this gap: the extended fragment captures exactly NL. This\nyields a strict hierarchy of SQL/PGQ fragments, whose union covers all NL\nqueries. On ordered structures the hierarchy collapses: once arity-2\nidentifiers are allowed, higher arities add no power, mirroring the classical\ntransitive-closure collapse and underscoring the central role of view\nconstruction in property graph querying."}
{"id": "2510.06240", "pdf": "https://arxiv.org/pdf/2510.06240", "abs": "https://arxiv.org/abs/2510.06240", "authors": ["Jiqun Pan", "Zhenke Duan", "Jiani Tu", "Anzhi Cheng", "Yanqing Wang"], "title": "Knowledge Graph-Guided Multi-Agent Distillation for Reliable Industrial Question Answering with Datasets", "categories": ["cs.CL", "cs.AI", "cs.DB"], "comment": "41 pages, 12 figures, 6 tables", "summary": "Industrial question-answering (QA) systems require higher safety and\nreliability than general-purpose dialogue models, as errors in high-risk\nscenarios such as equipment fault diagnosis can have severe consequences.\nAlthough multi-agent large language models enhance reasoning depth, they suffer\nfrom uncontrolled iterations and unverifiable outputs, and conventional\ndistillation methods struggle to transfer collaborative reasoning capabilities\nto lightweight, deployable student models. To address these challenges, we\npropose Knowledge Graph-guided Multi-Agent System Distillation (KG-MASD). Our\napproach formulates distillation as a Markov Decision Process and incorporates\na knowledge graph as a verifiable structured prior to enrich state\nrepresentation and ensure convergence. By integrating collaborative reasoning\nwith knowledge grounding, KG-MASD generates high-confidence instruction-tuning\ndata and jointly distills reasoning depth and verifiability into compact\nstudent models suitable for edge deployment. Experiments on an industrial QA\ndataset show that KG-MASD improves accuracy by 2.4 per cent to 20.1 per cent\nover baselines and significantly enhances reliability, enabling trustworthy AI\ndeployment in safety-critical industrial scenarios. Code and data are available\nat https://github.com/erwinmsmith/KG-MAD/."}
{"id": "2510.06377", "pdf": "https://arxiv.org/pdf/2510.06377", "abs": "https://arxiv.org/abs/2510.06377", "authors": ["Rishabh Ranjan", "Valter Hudovernik", "Mark Znidar", "Charilaos Kanatsoulis", "Roshan Upendra", "Mahmoud Mohammadi", "Joe Meyer", "Tom Palczewski", "Carlos Guestrin", "Jure Leskovec"], "title": "Relational Transformer: Toward Zero-Shot Foundation Models for Relational Data", "categories": ["cs.LG", "cs.AI", "cs.DB"], "comment": "preprint; under review", "summary": "Pretrained transformers readily adapt to new sequence modeling tasks via\nzero-shot prompting, but relational domains still lack architectures that\ntransfer across datasets and tasks. The core challenge is the diversity of\nrelational data, with varying heterogeneous schemas, graph structures and\nfunctional dependencies. In this paper, we present the Relational Transformer\n(RT) architecture, which can be pretrained on diverse relational databases and\ndirectly applied to unseen datasets and tasks without task- or dataset-specific\nfine-tuning, or retrieval of in-context examples. RT (i) tokenizes cells with\ntable/column metadata, (ii) is pretrained via masked token prediction, and\n(iii) utilizes a novel \\textit{Relational Attention} mechanism over columns,\nrows, and primary-foreign key links. Pretrained on RelBench datasets spanning\ntasks such as churn and sales forecasting, RT attains strong zero-shot\nperformance, averaging 94% of fully supervised AUROC on binary classification\ntasks with a single forward pass of a 22M parameter model, as opposed to 84%\nfor a 27B LLM. Fine-tuning yields state-of-the-art results with high sample\nefficiency. Our experiments show that RT's zero-shot transfer harnesses\ntask-table context, relational attention patterns and schema semantics.\nOverall, RT provides a practical path toward foundation models for relational\ndata."}
