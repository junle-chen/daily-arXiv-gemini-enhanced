{"id": "2509.09096", "pdf": "https://arxiv.org/pdf/2509.09096", "abs": "https://arxiv.org/abs/2509.09096", "authors": ["Daniel R Korn", "Patrick Golden", "Aaron Odell", "Katherina Cortes", "Shilpa Sundar", "Kevin Schaper", "Sarah Gehrke", "Corey Cox", "Harry Caufield", "Justin Reese", "Evan Morris", "Christopher J Mungall", "Melissa Haendel"], "title": "Koza and Koza-Hub for born-interoperable knowledge graph generation using KGX", "categories": ["cs.DB"], "comment": "9 pages, 1 figure, 1 table", "summary": "Knowledge graph construction has become an essential domain for the future of\nbiomedical research. But current approaches demand a high amount of redundant\nlabor. These redundancies are the result of the lack of data standards and\n\"knowledge-graph ready\" data from sources. Using the KGX standard, we aim to\nsolve these issues. Herein we introduce Koza and the Koza-Hub, a Python\nsoftware package which streamlines ingesting raw biomedical information into\nthe KGX format, and an associated set of conversion processes for thirty gold\nstandard biomedical data sources. Our approach is to turn knowledge graph\ningests into a set of primitive operations, provide configuration through YAML\nfiles, and enforce compliance with the chosen data schema."}
{"id": "2509.09440", "pdf": "https://arxiv.org/pdf/2509.09440", "abs": "https://arxiv.org/abs/2509.09440", "authors": ["Henrik Kirchmann", "Stephan A. Fahrenkrog-Petersen", "Xixi Lu", "Matthias Weidlich"], "title": "Let's Simply Count: Quantifying Distributional Similarity Between Activities in Event Data", "categories": ["cs.DB"], "comment": null, "summary": "To obtain insights from event data, advanced process mining methods assess\nthe similarity of activities to incorporate their semantic relations into the\nanalysis. Here, distributional similarity that captures similarity from\nactivity co-occurrences is commonly employed. However, existing work for\ndistributional similarity in process mining adopt neural network-based\napproaches as developed for natural language processing, e.g., word2vec and\nautoencoders. While these approaches have been shown to be effective, their\ndownsides are high computational costs and limited interpretability of the\nlearned representations.\n  In this work, we argue for simplicity in the modeling of distributional\nsimilarity of activities. We introduce count-based embeddings that avoid a\ncomplex training process and offer a direct interpretable representation. To\nunderpin our call for simple embeddings, we contribute a comprehensive\nbenchmarking framework, which includes means to assess the intrinsic quality of\nembeddings, their performance in downstream applications, and their\ncomputational efficiency. In experiments that compare against the state of the\nart, we demonstrate that count-based embeddings provide a highly effective and\nefficient basis for distributional similarity between activities in event data."}
{"id": "2509.09482", "pdf": "https://arxiv.org/pdf/2509.09482", "abs": "https://arxiv.org/abs/2509.09482", "authors": ["Agapi Rissaki", "Ilias Fountalis", "Wolfgang Gatterbauer", "Benny Kimelfeld"], "title": "Database Views as Explanations for Relational Deep Learning", "categories": ["cs.DB", "cs.LG"], "comment": null, "summary": "In recent years, there has been significant progress in the development of\ndeep learning models over relational databases, including architectures based\non heterogeneous graph neural networks (hetero-GNNs) and heterogeneous graph\ntransformers. In effect, such architectures state how the database records and\nlinks (e.g., foreign-key references) translate into a large, complex numerical\nexpression, involving numerous learnable parameters. This complexity makes it\nhard to explain, in human-understandable terms, how a model uses the available\ndata to arrive at a given prediction. We present a novel framework for\nexplaining machine-learning models over relational databases, where\nexplanations are view definitions that highlight focused parts of the database\nthat mostly contribute to the model's prediction. We establish such global\nabductive explanations by adapting the classic notion of determinacy by Nash,\nSegoufin, and Vianu (2010). In addition to tuning the tradeoff between\ndeterminacy and conciseness, the framework allows controlling the level of\ngranularity by adopting different fragments of view definitions, such as ones\nhighlighting whole columns, foreign keys between tables, relevant groups of\ntuples, and so on. We investigate the realization of the framework in the case\nof hetero-GNNs. We develop heuristic algorithms that avoid the exhaustive\nsearch over the space of all databases. We propose techniques that are\nmodel-agnostic, and others that are tailored to hetero-GNNs via the notion of\nlearnable masking. Our approach is evaluated through an extensive empirical\nstudy on the RelBench collection, covering a variety of domains and different\nrecord-level tasks. The results demonstrate the usefulness of the proposed\nexplanations, as well as the efficiency of their generation."}
{"id": "2509.08969", "pdf": "https://arxiv.org/pdf/2509.08969", "abs": "https://arxiv.org/abs/2509.08969", "authors": ["Nima Karimian Kakolaki"], "title": "A Comparative Analysis of Identifier Schemes: UUIDv4, UUIDv7, and ULID for Distributed Systems", "categories": ["cs.DC", "cs.DB"], "comment": null, "summary": "Distributed systems require robust, scalable identifier schemes to ensure\ndata uniqueness and efficient indexing across multiple nodes. This paper\npresents a comprehensive analysis of the evolution of distributed identifiers,\ncomparing traditional auto-increment keys with UUIDv4, UUIDv7, and ULIDs. We\ncombine mathematical calculation of collision probabilities with empirical\nexperiments measuring generation speed and network transmission overhead in a\nsimulated distributed environment. Results demonstrate that ULIDs significantly\noutperform UUIDv4 and UUIDv7, reducing network overhead by 83.7% and increasing\ngeneration speed by 97.32%. statistical analysis further shows ULIDs offer a\n98.42% lower collision risk compared to UUIDv7, while maintaining negligible\ncollision probabilities even at high generation rates. These findings highlight\nULIDs as an optimal choice for high-performance distributed systems, providing\nefficient, time-ordered, and lexicographically sortable identifiers suitable\nfor scalable applications. All source code, datasets, and analysis scripts\nutilized in this research are publicly available in our dedicated repository at\nhttps://github.com/nimakarimiank/uids-comparison. This repository contains\ncomprehensive documentation of the experimental setup, including configuration\nfiles for the distributed environment, producer and consumer implementations,\nand message broker integration. Additionally, it provides the data scripts and\ndatasets. Researchers and practitioners are encouraged to explore the\nrepository for full reproducibility of the experiments and to facilitate\nfurther investigation or extension of the presented work."}
