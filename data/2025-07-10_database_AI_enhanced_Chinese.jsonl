{"id": "2507.05403", "pdf": "https://arxiv.org/pdf/2507.05403", "abs": "https://arxiv.org/abs/2507.05403", "authors": ["Shuning Zhang", "Yongjoo Park"], "title": "PBE Meets LLM: When Few Examples Aren't Few-Shot Enough", "categories": ["cs.DB"], "comment": "7 pages, 5 figures, accepted by VLDB QDB'25 workshop", "summary": "Large language models (LLMs) can generate code from natural language\ndescriptions. Their performance is typically evaluated using programming\nbenchmarks that simulate real-world tasks. These benchmarks provide\nspecifications in the form of docstrings, function signatures, or bug reports.\nThe model then generates a program, which is tested against predefined test\ncases. In contrast, Programming by Example (PBE) uses input-output examples as\nthe specification. Traditional PBE systems rely on search-based methods over\nrestricted transformation spaces. They are usually designed for narrow domains\nand fixed input formats. It remains unclear how well LLMs perform on PBE tasks.\n  In this work, we evaluate LLMs on PBE tasks involving tabular data\ntransformations. We prompt models to generate functions that convert an input\ntable to an output table. We test the generated functions on unseen inputs to\nmeasure accuracy. Our study includes multiple LLMs and evaluates different\nprompting strategies, such as one-shot vs. multi-try. We also compare\nperformance with and without PBE-specific knowledge. Finally, we propose a\nhybrid method that calls a traditional PBE solver first, and then falls back to\nLLMs if necessary. Our results show that LLMs support more diverse input\nformats and achieve higher accuracy than conventional methods. However, they\nstruggle with tasks that contain ambiguity. The hybrid approach improves\noverall success by combining the strengths of both approaches.", "AI": {"tldr": "\u8fbe\u5230API\u914d\u989d\u9650\u5236\uff0c\u8bf7\u660e\u5929\u518d\u8bd5", "motivation": "Error: API quota exceeded", "method": "Error: API quota exceeded", "result": "Error: API quota exceeded", "conclusion": "\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\u6216\u7b49\u5f85\u660e\u5929API\u914d\u989d\u91cd\u7f6e\u3002"}}
{"id": "2507.05542", "pdf": "https://arxiv.org/pdf/2507.05542", "abs": "https://arxiv.org/abs/2507.05542", "authors": ["Mingchang Ge", "Liping Wang", "Xuemin Lin", "Yuang Zhang", "Kunming Wang"], "title": "GTRSS: Graph-based Top-$k$ Representative Similar Subtrajectory Query", "categories": ["cs.DB"], "comment": null, "summary": "Trajectory mining has attracted significant attention. This paper addresses\nthe Top-k Representative Similar Subtrajectory Query (TRSSQ) problem, which\naims to find the k most representative subtrajectories similar to a query.\nExisting methods rely on costly filtering-validation frameworks, resulting in\nslow response times. Addressing this, we propose GTRSS, a novel Graph-based\nTop-k Representative Similar Subtrajectory Query framework. During the offline\nphase, GTRSS builds a dual-layer graph index that clusters trajectories\ncontaining similar representative subtrajectories. In the online phase, it\nefficiently retrieves results by navigating the graph toward query-relevant\nclusters, bypassing full-dataset scanning and heavy computation. To support\nthis, we introduce the Data Trajectory Similarity Metric (DTSM) to measure the\nmost similar subtrajectory pair. We further combine R-tree and grid filtering\nwith DTSM pruning rules to speed up index building. To the best of our\nknowledge, GTRSS is the first graph-based solution for top-k subtrajectory\nsearch. Experiments on real datasets demonstrate that GTRSS significantly\nenhances both efficiency and accuracy, achieving a retrieval accuracy of over\n90 percent and up to two orders of magnitude speedup in query performance.", "AI": {"tldr": "\u8fbe\u5230API\u914d\u989d\u9650\u5236\uff0c\u8bf7\u660e\u5929\u518d\u8bd5", "motivation": "Error: API quota exceeded", "method": "Error: API quota exceeded", "result": "Error: API quota exceeded", "conclusion": "\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\u6216\u7b49\u5f85\u660e\u5929API\u914d\u989d\u91cd\u7f6e\u3002"}}
{"id": "2507.05573", "pdf": "https://arxiv.org/pdf/2507.05573", "abs": "https://arxiv.org/abs/2507.05573", "authors": ["Shivani Tripathi", "Pushpanjali Nema", "Aditya Halder", "Shi Qiao", "Alekh Jindal"], "title": "Prompt Migration: Stabilizing GenAI Applications with Evolving Large Language Models", "categories": ["cs.DB", "cs.AI", "cs.SE"], "comment": null, "summary": "Generative AI is transforming business applications by enabling natural\nlanguage interfaces and intelligent automation. However, the underlying large\nlanguage models (LLMs) are evolving rapidly and so prompting them consistently\nis a challenge. This leads to inconsistent and unpredictable application\nbehavior, undermining the reliability that businesses require for\nmission-critical workflows. In this paper, we introduce the concept of prompt\nmigration as a systematic approach to stabilizing GenAI applications amid\nchanging LLMs. Using the Tursio enterprise search application as a case study,\nwe analyze the impact of successive GPT model upgrades, detail our migration\nframework including prompt redesign and a migration testbed, and demonstrate\nhow these techniques restore application consistency. Our results show that\nstructured prompt migration can fully recover the application reliability that\nwas lost due to model drift. We conclude with practical lessons learned,\nemphasizing the need for prompt lifecycle management and robust testing to\nensure dependable GenAI-powered business applications.", "AI": {"tldr": "\u8fbe\u5230API\u914d\u989d\u9650\u5236\uff0c\u8bf7\u660e\u5929\u518d\u8bd5", "motivation": "Error: API quota exceeded", "method": "Error: API quota exceeded", "result": "Error: API quota exceeded", "conclusion": "\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\u6216\u7b49\u5f85\u660e\u5929API\u914d\u989d\u91cd\u7f6e\u3002"}}
{"id": "2507.05869", "pdf": "https://arxiv.org/pdf/2507.05869", "abs": "https://arxiv.org/abs/2507.05869", "authors": ["Tim C. Rese", "David Bermbach"], "title": "Towards an Application-Centric Benchmark Suite for Spatiotemporal Database Systems", "categories": ["cs.DB"], "comment": null, "summary": "Spatiotemporal data play a key role for mobility-based applications and are\ntheir produced volume is growing continuously, among others, due to the\nincreased availability of IoT devices.\n  When working with spatiotemporal data, developers rely on spatiotemporal\ndatabase systems such as PostGIS or MobilityDB.\n  For better understanding their quality of service behavior and then choosing\nthe best system, benchmarking is the go-to approach.\n  Unfortunately, existing work in this field studies only small isolated\naspects and a comprehensive application-centric benchmark suite is still\nmissing.\n  In this paper, we argue that an application-centric benchmark suite for\nspatiotemporal database systems is urgently needed.\n  We identify requirements for such a benchmark suite, discuss domain-specific\nchallenges, and sketch-out the architecture of a modular benchmarking suite.", "AI": {"tldr": "\u8fbe\u5230API\u914d\u989d\u9650\u5236\uff0c\u8bf7\u660e\u5929\u518d\u8bd5", "motivation": "Error: API quota exceeded", "method": "Error: API quota exceeded", "result": "Error: API quota exceeded", "conclusion": "\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\u6216\u7b49\u5f85\u660e\u5929API\u914d\u989d\u91cd\u7f6e\u3002"}}
{"id": "2507.06005", "pdf": "https://arxiv.org/pdf/2507.06005", "abs": "https://arxiv.org/abs/2507.06005", "authors": ["Diana Baumann", "Tim C. Rese", "David Bermbach"], "title": "Towards Serverless Processing of Spatiotemporal Big Data Queries", "categories": ["cs.DB", "cs.DC"], "comment": null, "summary": "Spatiotemporal data are being produced in continuously growing volumes by a\nvariety of data sources and a variety of application fields rely on rapid\nanalysis of such data. Existing systems such as PostGIS or MobilityDB usually\nbuild on relational database systems, thus, inheriting their scale-out\ncharacteristics. As a consequence, big spatiotemporal data scenarios still have\nlimited support even though many query types can easily be parallelized. In\nthis paper, we propose our vision of a native serverless data processing\napproach for spatiotemporal data: We break down queries into small subqueries\nwhich then leverage the near-instant scaling of Function-as-a-Service platforms\nto execute them in parallel. With this, we partially solve the scalability\nneeds of big spatiotemporal data processing.", "AI": {"tldr": "\u8fbe\u5230API\u914d\u989d\u9650\u5236\uff0c\u8bf7\u660e\u5929\u518d\u8bd5", "motivation": "Error: API quota exceeded", "method": "Error: API quota exceeded", "result": "Error: API quota exceeded", "conclusion": "\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\u6216\u7b49\u5f85\u660e\u5929API\u914d\u989d\u91cd\u7f6e\u3002"}}
{"id": "2507.06171", "pdf": "https://arxiv.org/pdf/2507.06171", "abs": "https://arxiv.org/abs/2507.06171", "authors": ["Whanhee Cho", "Anna Fariha"], "title": "Data-Semantics-Aware Recommendation of Diverse Pivot Tables", "categories": ["cs.DB"], "comment": null, "summary": "Data summarization is essential to discover insights from large datasets. In\na spreadsheets, pivot tables offer a convenient way to summarize tabular data\nby computing aggregates over some attributes, grouped by others. However,\nidentifying attribute combinations that will result in useful pivot tables\nremains a challenge, especially for high-dimensional datasets. We formalize the\nproblem of automatically recommending insightful and interpretable pivot\ntables, eliminating the tedious manual process. A crucial aspect of\nrecommending a set of pivot tables is to diversify them. Traditional works\ninadequately address the table-diversification problem, which leads us to\nconsider the problem of pivot table diversification.\n  We present SAGE, a data-semantics-aware system for recommending k-budgeted\ndiverse pivot tables, overcoming the shortcomings of prior work for top-k\nrecommendations that cause redundancy. SAGE ensures that each pivot table is\ninsightful, interpretable, and adaptive to the user's actions and preferences,\nwhile also guaranteeing that the set of pivot tables are different from each\nother, offering a diverse recommendation. We make two key technical\ncontributions: (1) a data-semantics-aware model to measure the utility of a\nsingle pivot table and the diversity of a set of pivot tables, and (2) a\nscalable greedy algorithm that can efficiently select a set of diverse pivot\ntables of high utility, by leveraging data semantics to significantly reduce\nthe combinatorial search space. Our extensive experiments on three real-world\ndatasets show that SAGE outperforms alternative approaches, and efficiently\nscales to accommodate high-dimensional datasets. Additionally, we present\nseveral case studies to highlight SAGE's qualitative effectiveness over\ncommercial software and Large Language Models (LLMs).", "AI": {"tldr": "\u8fbe\u5230API\u914d\u989d\u9650\u5236\uff0c\u8bf7\u660e\u5929\u518d\u8bd5", "motivation": "Error: API quota exceeded", "method": "Error: API quota exceeded", "result": "Error: API quota exceeded", "conclusion": "\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\u6216\u7b49\u5f85\u660e\u5929API\u914d\u989d\u91cd\u7f6e\u3002"}}
{"id": "2507.06192", "pdf": "https://arxiv.org/pdf/2507.06192", "abs": "https://arxiv.org/abs/2507.06192", "authors": ["Jiale Lao", "Immanuel Trummer"], "title": "SQLBarber: A System Leveraging Large Language Models to Generate Customized and Realistic SQL Workloads", "categories": ["cs.DB", "cs.AI", "cs.CL", "cs.LG"], "comment": null, "summary": "Database research and development often require a large number of SQL queries\nfor benchmarking purposes. However, acquiring real-world SQL queries is\nchallenging due to privacy concerns, and existing SQL generation methods are\nlimited in customization and in satisfying realistic constraints. To address\nthis issue, we present SQLBarber, a system based on Large Language Models\n(LLMs) to generate customized and realistic SQL workloads. SQLBarber (i)\neliminates the need for users to manually craft SQL templates in advance, while\nproviding the flexibility to accept natural language specifications to\nconstrain SQL templates, (ii) scales efficiently to generate large volumes of\nqueries matching any user-defined cost distribution (e.g., cardinality and\nexecution plan cost), and (iii) uses execution statistics from Amazon Redshift\nand Snowflake to derive SQL template specifications and query cost\ndistributions that reflect real-world query characteristics. SQLBarber\nintroduces (i) a declarative interface for users to effortlessly generate\ncustomized SQL templates, (ii) an LLM-powered pipeline augmented with a\nself-correction module that profiles, refines, and prunes SQL templates based\non query costs, and (iii) a Bayesian Optimizer to efficiently explore different\npredicate values and identify a set of queries that satisfy the target cost\ndistribution. We construct and open-source ten benchmarks of varying difficulty\nlevels and target query cost distributions based on real-world statistics from\nSnowflake and Amazon Redshift. Extensive experiments on these benchmarks show\nthat SQLBarber is the only system that can generate customized SQL templates.\nIt reduces query generation time by one to three orders of magnitude, and\nsignificantly improves alignment with the target cost distribution, compared\nwith existing methods.", "AI": {"tldr": "\u8fbe\u5230API\u914d\u989d\u9650\u5236\uff0c\u8bf7\u660e\u5929\u518d\u8bd5", "motivation": "Error: API quota exceeded", "method": "Error: API quota exceeded", "result": "Error: API quota exceeded", "conclusion": "\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\u6216\u7b49\u5f85\u660e\u5929API\u914d\u989d\u91cd\u7f6e\u3002"}}
{"id": "2507.05865", "pdf": "https://arxiv.org/pdf/2507.05865", "abs": "https://arxiv.org/abs/2507.05865", "authors": ["Ter\u00e9zia Slanin\u00e1kov\u00e1", "Jaroslav Olha", "David Proch\u00e1zka", "Matej Antol", "Vlastislav Dohnal"], "title": "On the Costs and Benefits of Learned Indexing for Dynamic High-Dimensional Data: Extended Version", "categories": ["cs.IR", "cs.DB"], "comment": null, "summary": "One of the main challenges within the growing research area of learned\nindexing is the lack of adaptability to dynamically expanding datasets. This\npaper explores the dynamization of a static learned index for complex data\nthrough operations such as node splitting and broadening, enabling efficient\nadaptation to new data. Furthermore, we evaluate the trade-offs between static\nand dynamic approaches by introducing an amortized cost model to assess query\nperformance in tandem with the build costs of the index structure, enabling\nexperimental determination of when a dynamic learned index outperforms its\nstatic counterpart. We apply the dynamization method to a static learned index\nand demonstrate that its superior scaling quickly surpasses the static\nimplementation in terms of overall costs as the database grows. This is an\nextended version of the paper presented at DAWAK 2025.", "AI": {"tldr": "\u8fbe\u5230API\u914d\u989d\u9650\u5236\uff0c\u8bf7\u660e\u5929\u518d\u8bd5", "motivation": "Error: API quota exceeded", "method": "Error: API quota exceeded", "result": "Error: API quota exceeded", "conclusion": "\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\u6216\u7b49\u5f85\u660e\u5929API\u914d\u989d\u91cd\u7f6e\u3002"}}
{"id": "2507.06008", "pdf": "https://arxiv.org/pdf/2507.06008", "abs": "https://arxiv.org/abs/2507.06008", "authors": ["Jungeun Lim", "Stephan A. Fahrenkrog-Petersen", "Xixi Lu", "Jan Mendling", "Minseok Song"], "title": "The Impact of Event Data Partitioning on Privacy-aware Process Discovery", "categories": ["cs.CR", "cs.AI", "cs.DB"], "comment": null, "summary": "Information systems support the execution of business processes. The event\nlogs of these executions generally contain sensitive information about\ncustomers, patients, and employees. The corresponding privacy challenges can be\naddressed by anonymizing the event logs while still retaining utility for\nprocess discovery. However, trading off utility and privacy is difficult: the\nhigher the complexity of event log, the higher the loss of utility by\nanonymization. In this work, we propose a pipeline that combines anonymization\nand event data partitioning, where event abstraction is utilized for\npartitioning. By leveraging event abstraction, event logs can be segmented into\nmultiple parts, allowing each sub-log to be anonymized separately. This\npipeline preserves privacy while mitigating the loss of utility. To validate\nour approach, we study the impact of event partitioning on two anonymization\ntechniques using three real-world event logs and two process discovery\ntechniques. Our results demonstrate that event partitioning can bring\nimprovements in process discovery utility for directly-follows-based\nanonymization techniques.", "AI": {"tldr": "\u8fbe\u5230API\u914d\u989d\u9650\u5236\uff0c\u8bf7\u660e\u5929\u518d\u8bd5", "motivation": "Error: API quota exceeded", "method": "Error: API quota exceeded", "result": "Error: API quota exceeded", "conclusion": "\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\u6216\u7b49\u5f85\u660e\u5929API\u914d\u989d\u91cd\u7f6e\u3002"}}
{"id": "2507.06107", "pdf": "https://arxiv.org/pdf/2507.06107", "abs": "https://arxiv.org/abs/2507.06107", "authors": ["Junaid Ahmed Khan", "Andrea Bartolini"], "title": "A Unified Ontology for Scalable Knowledge Graph-Driven Operational Data Analytics in High-Performance Computing Systems", "categories": ["cs.DC", "cs.DB"], "comment": "12 pages", "summary": "Modern high-performance computing (HPC) systems generate massive volumes of\nheterogeneous telemetry data from millions of sensors monitoring compute,\nmemory, power, cooling, and storage subsystems. As HPC infrastructures scale to\nsupport increasingly complex workloads-including generative AI-the need for\nefficient, reliable, and interoperable telemetry analysis becomes critical.\nOperational Data Analytics (ODA) has emerged to address these demands; however,\nthe reliance on schema-less storage solutions limits data accessibility and\nsemantic integration. Ontologies and knowledge graphs (KG) provide an effective\nway to enable efficient and expressive data querying by capturing domain\nsemantics, but they face challenges such as significant storage overhead and\nthe limited applicability of existing ontologies, which are often tailored to\nspecific HPC systems only. In this paper, we present the first unified ontology\nfor ODA in HPC systems, designed to enable semantic interoperability across\nheterogeneous data centers. Our ontology models telemetry data from the two\nlargest publicly available ODA datasets-M100 (Cineca, Italy) and F-DATA\n(Fugaku, Japan)-within a single data model. The ontology is validated through\n36 competency questions reflecting real-world stakeholder requirements, and we\nintroduce modeling optimizations that reduce knowledge graph (KG) storage\noverhead by up to 38.84% compared to a previous approach, with an additional\n26.82% reduction depending on the desired deployment configuration. This work\npaves the way for scalable ODA KGs and supports not only analysis within\nindividual systems, but also cross-system analysis across heterogeneous HPC\nsystems.", "AI": {"tldr": "\u8fbe\u5230API\u914d\u989d\u9650\u5236\uff0c\u8bf7\u660e\u5929\u518d\u8bd5", "motivation": "Error: API quota exceeded", "method": "Error: API quota exceeded", "result": "Error: API quota exceeded", "conclusion": "\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\u6216\u7b49\u5f85\u660e\u5929API\u914d\u989d\u91cd\u7f6e\u3002"}}
